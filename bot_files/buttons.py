from aiogram.types import KeyboardButton, ReplyKeyboardMarkup


menu = ReplyKeyboardMarkup(resize_keyboard=True)
menu.add(KeyboardButton('–ó–≤–æ—Ä–æ—Ç–Ω—ñ–π –∑–≤\'—è–∑–æ–∫'))

cancel = ReplyKeyboardMarkup(resize_keyboard=True)
cancel.add(KeyboardButton('–°–∫–∞—Å—É–≤–∞—Ç–∏'))


async def create_inline_buttons(buttons, load_more_button=False, limit=0, url=False) -> dict:
    """–§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ Inline –∫–Ω–æ–ø–æ–∫"""

    array_button = []
    global_array_buttons = []
    type_ = "callback_data"
    if url:
        type_ = "url"

    def add_item(x, y):
        array_button = []
        temp = {"text": f"{x}", f"{type_}": f"{y}"}
        array_button.append(temp)
        global_array_buttons.append(array_button)

    if limit and len(buttons) <= limit:
        load_more_button = False

    for x, i in enumerate(buttons):
        if limit and x < limit:
            add_item(i[0], i[1])
        elif not limit:
            add_item(i[0], i[1])

    if load_more_button:
        array_button = []
        temp = {"text": "üîΩ", "callback_data": "load_more"}
        array_button.append(temp)
        global_array_buttons.append(array_button)

    result = dict(inline_keyboard=global_array_buttons)

    return result


async def append_button_to_inline_dict_buttons(dict_buttons, button) -> dict:
    """
    –§—É–Ω–∫—Ü—ñ—è —è–∫–∞ –¥–æ–¥–∞—î –∫–Ω–æ–ø–∫—É –¥–æ —Å–ª–æ–≤–Ω–∏–∫ –≤–∂–µ —ñ—Å–Ω—É—é—á–∏—Ö –∫–Ω–æ–ø–æ–∫
    :param dict_buttons: –°–ª–æ–≤–Ω–∏–∫ –∑ –∫–Ω–æ–ø–∫–∞–º–∏
    :param button: –ö–Ω–æ–ø–∫–∞ –æ–±–≥–æ—Ä–Ω—É—Ç–∞ –≤ —Å–ø–∏—Å–æ–∫
    :return: –ú–æ–¥–∏—Ñ—ñ–∫–æ–≤–∞–Ω–∏–π —Å–ª–æ–≤–Ω–∏–∫
    """
    x = dict_buttons
    x = x['inline_keyboard'] + [[{'text': button[0], 'callback_data': button[1]}]]
    return dict(inline_keyboard=x)


async def append_button_to_keyboard_dict_buttons(dict_buttons, button) -> dict:
    """
    –§—É–Ω–∫—Ü—ñ—è —è–∫–∞ –¥–æ–¥–∞—î –∫–Ω–æ–ø–∫—É –¥–æ —Å–ª–æ–≤–Ω–∏–∫ –≤–∂–µ —ñ—Å–Ω—É—é—á–∏—Ö –∫–Ω–æ–ø–æ–∫ (–∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∞)
    :param dict_buttons: –°–ª–æ–≤–Ω–∏–∫ –∑ –∫–Ω–æ–ø–∫–∞–º–∏
    :param button: –ö–Ω–æ–ø–∫–∞ –æ–±–≥–æ—Ä–Ω—É—Ç–∞ –≤ —Å–ø–∏—Å–æ–∫
    :return: –ú–æ–¥–∏—Ñ—ñ–∫–æ–≤–∞–Ω–∏–π —Å–ª–æ–≤–Ω–∏–∫
    """
    x = dict_buttons
    x = x['keyboard'] + [[{'text': button}]]
    if dict_buttons['resize_keyboard']:
        return dict(keyboard=x, resize_keyboard=True)
    else:
        return dict(keyboard=x)